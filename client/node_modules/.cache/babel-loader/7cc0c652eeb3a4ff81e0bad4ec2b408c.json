{"ast":null,"code":"var _jsxFileName = \"/Users/nohararyusei/dev/task-v0.1/client/src/components/modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useLayoutEffect } from \"react\";\nimport { VscClose } from \"react-icons/vsc\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport \"../styles/modal.css\";\nimport API from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modal(props) {\n  _s();\n\n  const [description, setDescription] = useState(\"\");\n  const [taskid] = useState(props.taskid);\n  const [editable, setEditable] = useState(false);\n  const [detailID, setDetailID] = useState();\n  useLayoutEffect(() => {\n    API.get(\"detail\", {\n      params: {\n        id: taskid\n      }\n    }).then(response => {\n      const {\n        status\n      } = response;\n\n      if (status === 200) {\n        const {\n          id,\n          description\n        } = response.data;\n        setDescription(description);\n        setDetailID(id);\n      } else {\n        setEditable(true);\n      }\n    }).catch(err => {\n      // what should I do\n      window.location.reload();\n    });\n  }, [taskid]);\n\n  const saveDescripion = (path, data) => {\n    API.put(path, {\n      data\n    }).then(response => {\n      const {\n        id,\n        description\n      } = response.data;\n      setDetailID(id);\n    }).catch(err => {\n      // what should i do\n      window.location.reload();\n    });\n  };\n\n  const handleChange = e => {};\n\n  const textArea = /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n    className: \"text-area-for-descripton\",\n    onChange: e => {\n      setDescription(e.which === 13 ? description + \"\\n\" : e.target.value);\n      console.log(description);\n    },\n    autoFocus: true,\n    placeholder: \"description...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n\n  const detail = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"card-text\",\n    onClick: () => setEditable(true),\n    children: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: props.taskName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"close\",\n              onClick: () => props.setOpen(false),\n              children: /*#__PURE__*/_jsxDEV(VscClose, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"description\",\n            children: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: editable ? textArea : detail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => saveDescripion(\"detail\", {\n              description: description,\n              taskid: taskid,\n              id: detailID\n            }),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Modal, \"BgV7flzAbwWltr+3MxTogh0TYnA=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-v0.1/client/src/components/modal.js"],"names":["React","useState","useLayoutEffect","VscClose","TextareaAutosize","API","Modal","props","description","setDescription","taskid","editable","setEditable","detailID","setDetailID","get","params","id","then","response","status","data","catch","err","window","location","reload","saveDescripion","path","put","handleChange","e","textArea","which","target","value","console","log","detail","taskName","setOpen"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport { VscClose } from \"react-icons/vsc\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport \"../styles/modal.css\";\nimport API from \"./api\";\n\nfunction Modal(props) {\n    const [description, setDescription] = useState(\"\");\n    const [taskid] = useState(props.taskid);\n    const [editable, setEditable] = useState(false);\n    const [detailID, setDetailID] = useState();\n\n    useLayoutEffect(() => {\n        API.get(\"detail\", {\n            params: {\n                id: taskid\n            },\n        })\n        .then(response => {\n            const { status } = response;\n            if (status === 200) {\n                const { id, description } = response.data;\n                setDescription(description);\n                setDetailID(id);\n            }\n            else {\n                setEditable(true);\n            }\n        })\n        .catch(err => {\n            // what should I do\n            window.location.reload();\n        })\n    }, [taskid])\n\n    const saveDescripion = (path, data) => {\n        API.put(path, {\n            data\n        })\n        .then(response => {\n            const { id, description } = response.data;\n            setDetailID(id);\n        })\n        .catch(err => {\n            // what should i do\n            window.location.reload();\n        })\n    }   \n\n    const handleChange = (e) => {\n    }\n\n    const textArea =\n        <TextareaAutosize \n            className=\"text-area-for-descripton\"\n            onChange={(e) => {\n                setDescription(e.which === 13 ? description + \"\\n\" : e.target.value)\n                console.log(description);\n            }}\n            autoFocus={true}\n            placeholder={\"description...\"} \n        />\n    \n    const detail =\n            <p className=\"card-text\" onClick={() => setEditable(true)}>{description}</p>\n    \n        return (\n        <div id=\"overlay\">\n            <div id=\"content\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"d-flex justify-content-between\">\n                            <h4 className=\"card-title\">{props.taskName}</h4>\n                            <div className=\"close\" onClick={() => props.setOpen(false)}>\n                                <VscClose />\n                            </div>  \n                        </div>\n                        <h5 className=\"description\">description</h5>\n                        <div >\n                            {editable ? textArea : detail}\n                        </div>\n                        <button className=\"btn btn-primary\" onClick={() => saveDescripion(\"detail\", {description : description, taskid: taskid, id: detailID})}>Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}