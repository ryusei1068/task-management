{"ast":null,"code":"var _jsxFileName = \"/Users/nohararyusei/dev/task-management-v1-public/client/src/components/board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Tasklist from \"./tasklist\";\nimport EnterArea from \"./enterArea\";\nimport AddButton from \"./addButton\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/board.css\";\nimport API from \"./api\";\nimport cuttingStr from \"./shaping\";\nimport Navbar from \"./navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const [tasklist, setTasklist] = useState(props.tasklist);\n  const [listName, setListName] = useState(\"\");\n  const [dynamisation, setDynamisation] = useState(false);\n  useEffect(() => {\n    API.get(\"board\").then(response => {\n      const data = response.data;\n      setTasklist(data);\n    }).catch(() => {\n      window.location.reload();\n    });\n  }, []);\n\n  const handleSubmit = (e, path, data) => {\n    e.preventDefault();\n    if (listName.length === 0) return;\n    API.post(path, {\n      data\n    }).then(response => {\n      const {\n        tasklistID,\n        listName,\n        Tasks\n      } = response.data;\n      const newList = {\n        id: tasklistID,\n        listName: listName,\n        Tasks: Tasks\n      };\n      setTasklist([...tasklist, newList]);\n      setDynamisation(false);\n      setListName(\"\");\n    }).catch(() => {\n      window.location.reload();\n    });\n  };\n\n  const deletelist = (path, data, id) => {\n    API.delete(path, {\n      data\n    }).catch(() => {\n      window.location.reload();\n    });\n    const remainlist = tasklist.filter(list => id !== list.id);\n    setTasklist(remainlist);\n  };\n\n  const enterArea = /*#__PURE__*/_jsxDEV(EnterArea, {\n    handleSubmit: e => handleSubmit(e, \"tasklist\", {\n      listName: listName\n    }),\n    wrap: \"enter-section-name-wrap\",\n    handleChange: e => setListName(e.target.value),\n    text: \"Add List\",\n    placeholder: \"Enter list title...\",\n    cancel: e => {\n      e.preventDefault();\n      setDynamisation(false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n\n  const addAnotherListBtn = /*#__PURE__*/_jsxDEV(AddButton, {\n    addElement: () => setDynamisation(true),\n    text: \"Add another list\",\n    ClassName: \"add-list\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n\n  const sectionList = tasklist.map(section => /*#__PURE__*/_jsxDEV(Tasklist, {\n    id: section.id,\n    name: cuttingStr(section.listName),\n    deletelist: deletelist,\n    task: section.Tasks\n  }, section.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      authenticate: props.authenticate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-canvas\",\n        children: [sectionList, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-1\",\n          children: dynamisation ? enterArea : addAnotherListBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Board, \"3t/Hw9XidHMiBYgZRn0/OWhbDKU=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-management-v1-public/client/src/components/board.js"],"names":["React","useEffect","useState","Tasklist","EnterArea","AddButton","API","cuttingStr","Navbar","Board","props","tasklist","setTasklist","listName","setListName","dynamisation","setDynamisation","get","then","response","data","catch","window","location","reload","handleSubmit","e","path","preventDefault","length","post","tasklistID","Tasks","newList","id","deletelist","delete","remainlist","filter","list","enterArea","target","value","addAnotherListBtn","sectionList","map","section","authenticate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Tasklist from \"./tasklist\";\nimport EnterArea from \"./enterArea\";\nimport AddButton from \"./addButton\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/board.css\";\nimport API from \"./api\";\nimport cuttingStr from \"./shaping\";\nimport Navbar from \"./navbar\";\n\nfunction Board(props) {\n  const [tasklist, setTasklist] = useState(props.tasklist);\n  const [listName, setListName] = useState(\"\");\n  const [dynamisation, setDynamisation] = useState(false);\n\n  useEffect(() => {\n    API.get(\"board\")\n      .then(response => {\n        const data = response.data\n        setTasklist(data);\n      })\n      .catch(() => {\n        window.location.reload();\n      })\n  }, [])\n\n  const handleSubmit = (e, path, data) => {\n    e.preventDefault();\n    if (listName.length === 0) return;\n    API.post(path, {\n      data\n    })\n      .then(response => {\n        const { tasklistID, listName, Tasks } = response.data;\n        const newList = { id: tasklistID, listName: listName, Tasks: Tasks };\n        setTasklist([...tasklist, newList])\n        setDynamisation(false)\n        setListName(\"\")\n      })\n      .catch(() => {\n        window.location.reload();\n      })\n  }\n\n  const deletelist = (path, data, id) => {\n\n    API.delete(path, {\n      data\n    })\n      .catch(() => {\n        window.location.reload();\n      })\n\n    const remainlist = tasklist.filter(list => id !== list.id);\n    setTasklist(remainlist)\n  }\n\n  const enterArea =\n    <EnterArea\n      handleSubmit={(e) => handleSubmit(e, \"tasklist\", { listName: listName })}\n      wrap=\"enter-section-name-wrap\"\n      handleChange={(e) => setListName(e.target.value)}\n      text=\"Add List\"\n      placeholder=\"Enter list title...\"\n      cancel={(e) => {\n        e.preventDefault()\n        setDynamisation(false)\n      }}\n    />\n\n  const addAnotherListBtn =\n    <AddButton\n      addElement={() => setDynamisation(true)}\n      text=\"Add another list\"\n      ClassName=\"add-list\"\n    />\n\n  const sectionList = tasklist\n    .map(section => (\n      <Tasklist\n        id={section.id}\n        key={section.id}\n        name={cuttingStr(section.listName)}\n        deletelist={deletelist}\n        task={section.Tasks}\n      />\n    ))\n\n  return (\n    <>\n      <Navbar authenticate={props.authenticate} />\n      <div className=\"board-wrapper\">\n        <div className=\"board-canvas\">\n          {sectionList}\n          <div className=\"mx-1\">\n            {dynamisation ? enterArea : addAnotherListBtn}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}