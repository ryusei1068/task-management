{"ast":null,"code":"var _jsxFileName = \"/Users/nohararyusei/dev/task-v0.1/client/src/components/tasklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TaskCard from \"./taskCard\";\nimport EnterArea from \"./enterArea\";\nimport AddButton from \"./addButton\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { VscClose } from \"react-icons/vsc\";\nimport postData from \"../api/post\";\nimport deleteData from \"../api/delete\";\nimport putData from \"../api/put\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskList(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.task);\n  const [inputMode, setEnable] = useState(false);\n  const [taskName, setTaskName] = useState(\"\");\n  const [dynamisation, setDynamisation] = useState(false);\n  const [tasklistID] = useState(props.id);\n  const [listName, setListName] = useState(props.name);\n\n  const keyPress = e => {\n    if (e.which === 13) {\n      setEnable(false);\n      putData(\"/tasklist\", {\n        listid: tasklistID,\n        listName: listName\n      }).then(response => {\n        setListName(cuttingStr(response.data.listName));\n      }).catch(err => {\n        // what should I do \n        window.location.reload();\n      });\n    }\n  };\n\n  const handleSubmit = (e, path, data) => {\n    e.preventDefault();\n    if (taskName.length === 0) return;\n    postData(path, data).then(response => {\n      const {\n        taskID,\n        taskName\n      } = response.data;\n      const newTask = {\n        id: taskID,\n        TaskName: cuttingStr(taskName)\n      };\n      setTasks([...tasks, newTask]);\n      setDynamisation(false);\n      setTaskName(\"\");\n    }).catch(err => {\n      // what should I do\n      window.location.reload();\n    });\n  };\n\n  const deleteTask = (path, data, id) => {\n    deleteData(path, data).then(res => {}).catch(err => {\n      // what should I do\n      window.location.reload();\n    });\n    const remainTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainTasks);\n  };\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n    id: task.id,\n    name: task.TaskName,\n    deleteTask: deleteTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this));\n\n  const enterTaskName = /*#__PURE__*/_jsxDEV(EnterArea, {\n    handleSubmit: e => handleSubmit(e, \"/task\", {\n      taskName: taskName,\n      tasklistID: tasklistID\n    }),\n    wrap: \"enter-task-name m-3\",\n    handleChange: e => setTaskName(e.target.value),\n    text: \"Add Task\",\n    placeholder: \"Enter task name...\",\n    cancel: () => {\n      setDynamisation(false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n\n  const addTaskBtn = /*#__PURE__*/_jsxDEV(AddButton, {\n    addElement: () => setDynamisation(true),\n    text: \"Add a Card\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n\n  const taskListName = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"listName\",\n      onClick: () => setEnable(true),\n      children: listName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trash-box-icon\",\n      onClick: () => props.deletelist('/tasklist', {\n        listid: props.id\n      }, props.id),\n      children: /*#__PURE__*/_jsxDEV(VscClose, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n\n  const textArea = /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n    className: \"section-title w-100\",\n    onKeyPress: e => keyPress(e),\n    onChange: e => setListName(e.target.value),\n    autoFocus: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 17\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vh-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-2 list-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-3 sectionName-wrap\",\n          children: inputMode ? textArea : taskListName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-cards\",\n        children: taskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), !dynamisation ? addTaskBtn : enterTaskName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TaskList, \"rLz5GbTuwVBfrZmnjQfLqqKnzMA=\");\n\n_c = TaskList;\n\nfunction cuttingStr(str) {\n  const bytes = encodeURI(str).replace(/%../g, \"*\").length;\n  return bytes >= 24 ? str.substr(0, 23) + \"...\" : str;\n}\n\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-v0.1/client/src/components/tasklist.js"],"names":["React","useState","TaskCard","EnterArea","AddButton","TextareaAutosize","VscClose","postData","deleteData","putData","TaskList","props","tasks","setTasks","task","inputMode","setEnable","taskName","setTaskName","dynamisation","setDynamisation","tasklistID","id","listName","setListName","name","keyPress","e","which","listid","then","response","cuttingStr","data","catch","err","window","location","reload","handleSubmit","path","preventDefault","length","taskID","newTask","TaskName","deleteTask","res","remainTasks","filter","taskList","map","enterTaskName","target","value","addTaskBtn","taskListName","deletelist","textArea","str","bytes","encodeURI","replace","substr"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TaskCard from \"./taskCard\";\nimport EnterArea from \"./enterArea\";\nimport AddButton from \"./addButton\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { VscClose } from \"react-icons/vsc\";\nimport postData from \"../api/post\";\nimport deleteData from \"../api/delete\";\nimport putData from \"../api/put\";\n\nfunction TaskList(props) {\n    const [tasks, setTasks] = useState(props.task);\n    const [inputMode, setEnable] = useState(false);\n    const [taskName, setTaskName] = useState(\"\");\n    const [dynamisation, setDynamisation] = useState(false);\n    const [tasklistID] = useState(props.id);\n    const [listName, setListName] = useState(props.name);\n    \n    const keyPress = (e) => {\n        if (e.which === 13) {\n            setEnable(false)\n\n            putData(\"/tasklist\", {listid: tasklistID, listName: listName})\n            .then(response => {\n                setListName(cuttingStr(response.data.listName));\n            })\n            .catch(err => {\n                // what should I do \n                window.location.reload();\n            })\n        }\n    }\n\n    const handleSubmit = (e, path, data) => {\n        e.preventDefault();\n        if (taskName.length === 0) return ;\n\n        postData(path, data)\n        .then(response => {\n            const { taskID, taskName } = response.data;\n            const newTask = { id: taskID, TaskName: cuttingStr(taskName) };\n            setTasks([...tasks, newTask])\n            setDynamisation(false)\n            setTaskName(\"\");\n        })\n        .catch(err => {\n            // what should I do\n            window.location.reload();\n        })\n    }\n\n    const deleteTask = (path, data, id) => {\n        deleteData(path, data)\n        .then(res => {\n\n        })\n        .catch(err => {\n            // what should I do\n            window.location.reload();\n        })\n        const remainTasks = tasks.filter(task => id !== task.id);\n        setTasks(remainTasks);\n    }\n\n    const taskList = tasks\n        .map(task => (\n            <TaskCard\n                id={task.id}\n                key={task.id}\n                name={task.TaskName}\n                deleteTask={deleteTask}\n            />\n        ))    \n\n    const enterTaskName = \n        <EnterArea \n            handleSubmit={(e) => handleSubmit(e, \"/task\", {taskName: taskName, tasklistID: tasklistID})}\n            wrap=\"enter-task-name m-3\"\n            handleChange={(e) => setTaskName(e.target.value)}\n            text=\"Add Task\"\n            placeholder=\"Enter task name...\"\n            cancel={() => {setDynamisation(false)}}\n        />\n\n    const addTaskBtn = \n        <AddButton \n            addElement={() => setDynamisation(true)}\n            text=\"Add a Card\"\n        />\n    \n    const taskListName =  \n            <>\n                <h5 className=\"listName\" onClick={() => setEnable(true)}>{listName}</h5>\n                <div className=\"trash-box-icon\" \n                    onClick={() => props.deletelist( '/tasklist', { listid: props.id }, props.id )}\n                >\n                    <VscClose/>\n                </div>\n            </>\n\n    const textArea =\n                <TextareaAutosize \n                    className=\"section-title w-100\" \n                    onKeyPress={(e) => keyPress(e)} \n                    onChange={(e) => setListName(e.target.value)}\n                    autoFocus={true}\n                />\n\n    return  (\n            <div className=\"vh-100\">\n                <div className=\"mx-2 list-wrapper\">\n                    <div className=\"mx-3\">\n                        <div className=\"pt-3 sectionName-wrap\">\n                            {inputMode ? textArea : taskListName}\n                        </div>\n                    </div>\n                    <div className=\"task-cards\">\n                        {taskList}\n                    </div>\n                        {!dynamisation ? addTaskBtn : enterTaskName}\n                </div>\n            </div>\n        )\n}\n\nfunction cuttingStr(str) {\n    const bytes = encodeURI(str).replace(/%../g, \"*\").length;\n    return bytes >= 24 ? str.substr(0, 23) + \"...\" : str;\n}\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}