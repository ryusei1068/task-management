{"ast":null,"code":"var _jsxFileName = \"/Users/nohararyusei/dev/task-management-v1-public/client/src/components/tasklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TaskCard from \"./taskCard\";\nimport EnterArea from \"./enterArea\";\nimport AddButton from \"./addButton\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { VscClose } from \"react-icons/vsc\";\nimport API from \"./api\";\nimport cuttingStr from \"./shaping\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskList(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.task);\n  const [editable, setEditable] = useState(false);\n  const [taskName, setTaskName] = useState(\"\");\n  const [newAddition, setNewAddition] = useState(false);\n  const [tasklistID] = useState(props.id);\n  const [listName, setListName] = useState(props.name);\n\n  const keyPress = (e, path, data) => {\n    if (e.which === 13 && listName.length) {\n      setEditable(false);\n      API.put(path, {\n        data\n      }).then(response => {\n        setListName(cuttingStr(response.data.listName));\n      }).catch(err => {\n        window.location.reload();\n      });\n    }\n  };\n\n  const handleSubmit = (e, path, data) => {\n    e.preventDefault();\n    if (taskName.length === 0) return;\n    API.post(path, {\n      data\n    }).then(response => {\n      const {\n        taskID,\n        taskName\n      } = response.data;\n      const newTask = {\n        id: taskID,\n        TaskName: taskName\n      };\n      setTasks([...tasks, newTask]);\n      setNewAddition(false);\n      setTaskName(\"\");\n    }).catch(err => {\n      window.location.reload();\n    });\n  };\n\n  const deleteTask = (path, data, id) => {\n    API.delete(path, {\n      data\n    }).catch(() => {\n      window.location.reload();\n    });\n    const remainTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainTasks);\n  };\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n    id: task.id,\n    name: task.TaskName,\n    deleteTask: deleteTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this));\n\n  const enterTaskName = /*#__PURE__*/_jsxDEV(EnterArea, {\n    handleSubmit: e => handleSubmit(e, \"task\", {\n      taskName: taskName,\n      tasklistID: tasklistID\n    }),\n    wrap: \"enter-task-name m-3\",\n    handleChange: e => setTaskName(e.target.value),\n    text: \"Add Task\",\n    placeholder: \"Enter task name...\",\n    cancel: e => {\n      e.preventDefault();\n      setNewAddition(false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n\n  const addTaskBtn = /*#__PURE__*/_jsxDEV(AddButton, {\n    addElement: () => setNewAddition(true),\n    text: \"Add a Card\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n\n  const taskListName = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"listName\",\n      onClick: () => setEditable(true),\n      children: listName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trash-box-icon\",\n      onClick: () => props.deletelist('tasklist', {\n        listid: props.id\n      }, props.id),\n      children: /*#__PURE__*/_jsxDEV(VscClose, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const textArea = /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n    className: \"section-title w-100\",\n    onKeyPress: e => keyPress(e, \"tasklist\", {\n      listid: tasklistID,\n      listName: listName\n    }),\n    onChange: e => setListName(e.target.value),\n    autoFocus: true,\n    defaultValue: listName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vh-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-2 list-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-3 sectionName-wrap\",\n          children: editable ? textArea : taskListName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-cards\",\n        children: taskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), newAddition ? enterTaskName : addTaskBtn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskList, \"Eu5o5VEGWDlQ3T1YUEfdfKdiowg=\");\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-management-v1-public/client/src/components/tasklist.js"],"names":["React","useState","TaskCard","EnterArea","AddButton","TextareaAutosize","VscClose","API","cuttingStr","TaskList","props","tasks","setTasks","task","editable","setEditable","taskName","setTaskName","newAddition","setNewAddition","tasklistID","id","listName","setListName","name","keyPress","e","path","data","which","length","put","then","response","catch","err","window","location","reload","handleSubmit","preventDefault","post","taskID","newTask","TaskName","deleteTask","delete","remainTasks","filter","taskList","map","enterTaskName","target","value","addTaskBtn","taskListName","deletelist","listid","textArea"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TaskCard from \"./taskCard\";\nimport EnterArea from \"./enterArea\";\nimport AddButton from \"./addButton\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { VscClose } from \"react-icons/vsc\";\nimport API from \"./api\";\nimport cuttingStr from \"./shaping\";\n\nfunction TaskList(props) {\n  const [tasks, setTasks] = useState(props.task);\n  const [editable, setEditable] = useState(false);\n  const [taskName, setTaskName] = useState(\"\");\n  const [newAddition, setNewAddition] = useState(false);\n  const [tasklistID] = useState(props.id);\n  const [listName, setListName] = useState(props.name);\n\n  const keyPress = (e, path, data) => {\n    if (e.which === 13 && listName.length) {\n      setEditable(false);\n      API.put(path, {\n        data\n      })\n        .then(response => {\n          setListName(cuttingStr(response.data.listName));\n        })\n        .catch(err => {\n          window.location.reload();\n        })\n    }\n  }\n\n  const handleSubmit = (e, path, data) => {\n    e.preventDefault();\n    if (taskName.length === 0) return;\n\n    API.post(path, {\n      data\n    })\n      .then(response => {\n        const { taskID, taskName } = response.data;\n        const newTask = { id: taskID, TaskName: taskName };\n        setTasks([...tasks, newTask])\n        setNewAddition(false)\n        setTaskName(\"\");\n      })\n      .catch(err => {\n        window.location.reload();\n      })\n  }\n\n  const deleteTask = (path, data, id) => {\n    API.delete(path, {\n      data\n    })\n      .catch(() => {\n        window.location.reload();\n      })\n\n    const remainTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainTasks);\n  }\n\n  const taskList = tasks\n    .map(task => (\n      <TaskCard\n        id={task.id}\n        key={task.id}\n        name={task.TaskName}\n        deleteTask={deleteTask}\n      />\n    ))\n\n  const enterTaskName =\n    <EnterArea\n      handleSubmit={(e) => handleSubmit(e, \"task\", { taskName: taskName, tasklistID: tasklistID })}\n      wrap=\"enter-task-name m-3\"\n      handleChange={(e) => setTaskName(e.target.value)}\n      text=\"Add Task\"\n      placeholder=\"Enter task name...\"\n      cancel={(e) => {\n        e.preventDefault()\n        setNewAddition(false)\n      }}\n    />\n\n  const addTaskBtn =\n    <AddButton\n      addElement={() => setNewAddition(true)}\n      text=\"Add a Card\"\n    />\n\n  const taskListName =\n    <>\n      <h5 className=\"listName\" onClick={() => setEditable(true)}>{listName}</h5>\n      <div className=\"trash-box-icon\"\n        onClick={() => props.deletelist('tasklist', { listid: props.id }, props.id)}\n      >\n        <VscClose />\n      </div>\n    </>\n\n  const textArea =\n    <TextareaAutosize\n      className=\"section-title w-100\"\n      onKeyPress={(e) => keyPress(e, \"tasklist\", { listid: tasklistID, listName: listName })}\n      onChange={(e) => setListName(e.target.value)}\n      autoFocus={true}\n      defaultValue={listName}\n    />\n\n  return (\n    <div className=\"vh-100\">\n      <div className=\"mx-2 list-wrapper\">\n        <div className=\"mx-3\">\n          <div className=\"pt-3 sectionName-wrap\">\n            {editable ? textArea : taskListName}\n          </div>\n        </div>\n        <div className=\"task-cards\">\n          {taskList}\n        </div>\n        {newAddition ? enterTaskName : addTaskBtn}\n      </div>\n    </div>\n  )\n}\n\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}