{"ast":null,"code":"import _toConsumableArray from\"/Users/nohararyusei/dev/task-v0.1/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/nohararyusei/dev/task-v0.1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import TaskCard from\"./taskCard\";import EnterArea from\"./enterArea\";import AddButton from\"./addButton\";import TextareaAutosize from'react-textarea-autosize';import{VscClose}from\"react-icons/vsc\";import API from\"./api\";import cuttingStr from\"./shaping\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TaskList(props){var _useState=useState(props.task),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),editable=_useState4[0],setEditable=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),taskName=_useState6[0],setTaskName=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),newAddition=_useState8[0],setNewAddition=_useState8[1];var _useState9=useState(props.id),_useState10=_slicedToArray(_useState9,1),tasklistID=_useState10[0];var _useState11=useState(props.name),_useState12=_slicedToArray(_useState11,2),listName=_useState12[0],setListName=_useState12[1];var keyPress=function keyPress(e,path,data){if(e.which===13&&listName.length){setEditable(false);API.put(path,{data:data}).then(function(response){setListName(cuttingStr(response.data.listName));}).catch(function(err){// what should I do \nwindow.location.reload();});}};var _handleSubmit=function handleSubmit(e,path,data){e.preventDefault();if(taskName.length===0)return;API.post(path,{data:data}).then(function(response){var _response$data=response.data,taskID=_response$data.taskID,taskName=_response$data.taskName;var newTask={id:taskID,TaskName:taskName};setTasks([].concat(_toConsumableArray(tasks),[newTask]));setNewAddition(false);setTaskName(\"\");}).catch(function(err){// what should I do\nwindow.location.reload();});};var deleteTask=function deleteTask(path,data,id){API.delete(path,{data:data}).then(function(res){// what should I do\n}).catch(function(err){// what should I do\nwindow.location.reload();});var remainTasks=tasks.filter(function(task){return id!==task.id;});setTasks(remainTasks);};var taskList=tasks.map(function(task){return/*#__PURE__*/_jsx(TaskCard,{id:task.id,name:task.TaskName,deleteTask:deleteTask},task.id);});var enterTaskName=/*#__PURE__*/_jsx(EnterArea,{handleSubmit:function handleSubmit(e){return _handleSubmit(e,\"task\",{taskName:taskName,tasklistID:tasklistID});},wrap:\"enter-task-name m-3\",handleChange:function handleChange(e){return setTaskName(e.target.value);},text:\"Add Task\",placeholder:\"Enter task name...\",cancel:function cancel(e){e.preventDefault();setNewAddition(false);}});var addTaskBtn=/*#__PURE__*/_jsx(AddButton,{addElement:function addElement(){return setNewAddition(true);},text:\"Add a Card\"});var taskListName=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"listName\",onClick:function onClick(){return setEditable(true);},children:listName}),/*#__PURE__*/_jsx(\"div\",{className:\"trash-box-icon\",onClick:function onClick(){return props.deletelist('tasklist',{listid:props.id},props.id);},children:/*#__PURE__*/_jsx(VscClose,{})})]});var textArea=/*#__PURE__*/_jsx(TextareaAutosize,{className:\"section-title w-100\",onKeyPress:function onKeyPress(e){return keyPress(e,\"tasklist\",{listid:tasklistID,listName:listName});},onChange:function onChange(e){return setListName(e.target.value);},autoFocus:true,defaultValue:listName});return/*#__PURE__*/_jsx(\"div\",{className:\"vh-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mx-2 list-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mx-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"pt-3 sectionName-wrap\",children:editable?textArea:taskListName})}),/*#__PURE__*/_jsx(\"div\",{className:\"task-cards\",children:taskList}),newAddition?enterTaskName:addTaskBtn]})});}export default TaskList;","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-v0.1/client/src/components/tasklist.js"],"names":["React","useState","TaskCard","EnterArea","AddButton","TextareaAutosize","VscClose","API","cuttingStr","TaskList","props","task","tasks","setTasks","editable","setEditable","taskName","setTaskName","newAddition","setNewAddition","id","tasklistID","name","listName","setListName","keyPress","e","path","data","which","length","put","then","response","catch","err","window","location","reload","handleSubmit","preventDefault","post","taskID","newTask","TaskName","deleteTask","delete","res","remainTasks","filter","taskList","map","enterTaskName","target","value","addTaskBtn","taskListName","deletelist","listid","textArea"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TaskCard from \"./taskCard\";\nimport EnterArea from \"./enterArea\";\nimport AddButton from \"./addButton\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { VscClose } from \"react-icons/vsc\";\nimport API from \"./api\";\nimport cuttingStr from \"./shaping\";\n\nfunction TaskList(props) {\n    const [tasks, setTasks] = useState(props.task);\n    const [editable, setEditable] = useState(false);\n    const [taskName, setTaskName] = useState(\"\");\n    const [newAddition, setNewAddition] = useState(false);\n    const [tasklistID] = useState(props.id);\n    const [listName, setListName] = useState(props.name);\n    \n    const keyPress = (e, path, data) => {\n        if (e.which === 13 && listName.length) {\n            setEditable(false);\n            API.put(path, {\n                data\n            })\n            .then(response => {\n                setListName(cuttingStr(response.data.listName));\n            })\n            .catch(err => {\n                // what should I do \n                window.location.reload();\n            })\n        }\n    }\n\n    const handleSubmit = (e, path, data) => {\n        e.preventDefault();\n        if (taskName.length === 0) return ;\n\n        API.post(path, {\n            data\n        })\n        .then(response => {\n            const { taskID, taskName } = response.data;\n            const newTask = { id: taskID, TaskName: taskName };\n            setTasks([...tasks, newTask])\n            setNewAddition(false)\n            setTaskName(\"\");\n        })\n        .catch(err => {\n            // what should I do\n            window.location.reload();\n        })\n    }\n\n    const deleteTask = (path, data, id) => {\n        API.delete(path, {\n            data\n        })\n        .then(res => {\n            // what should I do\n        })\n        .catch(err => {\n            // what should I do\n            window.location.reload();\n        })\n        const remainTasks = tasks.filter(task => id !== task.id);\n        setTasks(remainTasks);\n    }\n\n    const taskList = tasks\n        .map(task => (\n            <TaskCard\n                id={task.id}\n                key={task.id}\n                name={task.TaskName}\n                deleteTask={deleteTask}\n            />\n        ))    \n\n    const enterTaskName = \n        <EnterArea \n            handleSubmit={(e) => handleSubmit(e, \"task\", {taskName: taskName, tasklistID: tasklistID})}\n            wrap=\"enter-task-name m-3\"\n            handleChange={(e) => setTaskName(e.target.value)}\n            text=\"Add Task\"\n            placeholder=\"Enter task name...\"\n            cancel={(e) => {\n                e.preventDefault()\n                setNewAddition(false)\n            }}\n        />\n\n    const addTaskBtn = \n        <AddButton \n            addElement={() => setNewAddition(true)}\n            text=\"Add a Card\"\n        />\n    \n    const taskListName =  \n            <> \n                <h5 className=\"listName\" onClick={() => setEditable(true)}>{listName}</h5>\n                <div className=\"trash-box-icon\" \n                    onClick={() => props.deletelist( 'tasklist', { listid: props.id }, props.id )}\n                >\n                    <VscClose/>\n                </div>\n            </>\n\n    const textArea =\n                <TextareaAutosize \n                    className=\"section-title w-100\" \n                    onKeyPress={(e) => keyPress(e, \"tasklist\", {listid: tasklistID, listName: listName})} \n                    onChange={(e) => setListName(e.target.value)}\n                    autoFocus={true}\n                    defaultValue={listName}\n                />\n\n    return  (\n            <div className=\"vh-100\">\n                <div className=\"mx-2 list-wrapper\">\n                    <div className=\"mx-3\">\n                        <div className=\"pt-3 sectionName-wrap\">\n                            {editable ? textArea : taskListName }\n                        </div>\n                    </div>\n                    <div className=\"task-cards\">\n                        {taskList}\n                    </div>\n                        {newAddition ? enterTaskName : addTaskBtn}\n                </div>\n            </div>\n        )\n}\n\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}