{"ast":null,"code":"var _jsxFileName = \"/Users/nohararyusei/dev/task-management-v1-public/client/src/components/modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useLayoutEffect } from \"react\";\nimport { VscClose } from \"react-icons/vsc\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport \"../styles/modal.css\";\nimport API from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modal(props) {\n  _s();\n\n  const [description, setDescription] = useState(\"\");\n  const [taskid] = useState(props.taskid);\n  const [editable, setEditable] = useState(false);\n  const [detailID, setDetailID] = useState();\n  useLayoutEffect(() => {\n    API.get(\"detail\", {\n      params: {\n        id: taskid\n      }\n    }).then(response => {\n      const {\n        status\n      } = response;\n\n      if (status === 200) {\n        const {\n          id,\n          description\n        } = response.data;\n        setDescription(description);\n        setDetailID(id);\n      } else {\n        setEditable(true);\n      }\n    }).catch(err => {\n      window.location.reload();\n    });\n  }, [taskid]);\n\n  const saveDescripion = (path, data) => {\n    setEditable(false);\n    API.put(path, {\n      data\n    }).then(response => {\n      const {\n        id,\n        description\n      } = response.data;\n      setDetailID(id);\n      setDescription(description);\n    }).catch(err => {\n      window.location.reload();\n    });\n  };\n\n  const textArea = /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n    className: \"text-area-for-descripton\",\n    onChange: e => setDescription(e.target.value),\n    autoFocus: true,\n    placeholder: \"description...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n\n  const detail = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"card-text\",\n    onClick: () => setEditable(true),\n    children: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: props.taskName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"close\",\n              onClick: () => props.setOpen(false),\n              children: /*#__PURE__*/_jsxDEV(VscClose, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"description\",\n            children: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: editable ? textArea : detail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => saveDescripion(\"detail\", {\n              description: description,\n              taskid: taskid,\n              id: detailID\n            }),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Modal, \"BgV7flzAbwWltr+3MxTogh0TYnA=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-management-v1-public/client/src/components/modal.js"],"names":["React","useState","useLayoutEffect","VscClose","TextareaAutosize","API","Modal","props","description","setDescription","taskid","editable","setEditable","detailID","setDetailID","get","params","id","then","response","status","data","catch","err","window","location","reload","saveDescripion","path","put","textArea","e","target","value","detail","taskName","setOpen"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport { VscClose } from \"react-icons/vsc\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport \"../styles/modal.css\";\nimport API from \"./api\";\n\nfunction Modal(props) {\n  const [description, setDescription] = useState(\"\");\n  const [taskid] = useState(props.taskid);\n  const [editable, setEditable] = useState(false);\n  const [detailID, setDetailID] = useState();\n\n  useLayoutEffect(() => {\n    API.get(\"detail\", {\n      params: {\n        id: taskid\n      },\n    })\n      .then(response => {\n        const { status } = response;\n        if (status === 200) {\n          const { id, description } = response.data;\n          setDescription(description);\n          setDetailID(id);\n        }\n        else {\n          setEditable(true);\n        }\n      })\n      .catch(err => {\n        window.location.reload();\n      })\n  }, [taskid])\n\n  const saveDescripion = (path, data) => {\n    setEditable(false);\n    API.put(path, {\n      data\n    })\n      .then(response => {\n        const { id, description } = response.data;\n        setDetailID(id);\n        setDescription(description);\n      })\n      .catch(err => {\n        window.location.reload();\n      })\n  }\n\n  const textArea =\n    <TextareaAutosize\n      className=\"text-area-for-descripton\"\n      onChange={(e) => setDescription(e.target.value)}\n      autoFocus={true}\n      placeholder={\"description...\"}\n    />\n\n  const detail =\n    <p className=\"card-text\" onClick={() => setEditable(true)}>{description}</p>\n\n  return (\n    <div id=\"overlay\">\n      <div id=\"content\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"d-flex justify-content-between\">\n              <h4 className=\"card-title\">{props.taskName}</h4>\n              <div className=\"close\" onClick={() => props.setOpen(false)}>\n                <VscClose />\n              </div>\n            </div>\n            <h5 className=\"description\">description</h5>\n            <div >\n              {editable ? textArea : detail}\n            </div>\n            <button className=\"btn btn-secondary\" onClick={() => saveDescripion(\"detail\", { description: description, taskid: taskid, id: detailID })}>Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}