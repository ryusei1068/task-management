{"ast":null,"code":"var _jsxFileName = \"/Users/nohararyusei/dev/task-v0.1/client/src/pages/board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TaskSection from \"../components/task-section\";\nimport EnterArea from \"../components/enterArea\";\nimport AddButton from \"../components/addButton\";\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst api = process.env.REACT_APP_API;\n\nfunction Board(props) {\n  _s();\n\n  const [tasklist, setTasklist] = useState(props.tasklist);\n  const [listName, setListName] = useState(\"\");\n  const [dynamisation, setDynamisation] = useState(false);\n  useEffect(() => {\n    axios.get(api + \"/board\").then(response => {\n      const data = response.data;\n      setTasklist(data);\n    }).catch(err => {});\n  }, []);\n\n  const addTaskList = () => {\n    setDynamisation(true);\n  };\n\n  const cancelAdd = e => {\n    e.preventDefault();\n    setDynamisation(false);\n  };\n\n  const handleChange = e => {\n    setListName(e.target.value);\n  };\n\n  const handleSubmit = (e, path, bodyData) => {\n    e.preventDefault(); // if (listName.length === 0) return ;\n\n    const keys = Object.keys(bodyData);\n    if (bodyData[keys[0]].length === 0) return;\n    const data = {\n      listName: listName\n    };\n    axios.post(api + path, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      bodyData\n    }).then(response => {\n      const {\n        tasklistID,\n        listName,\n        Tasks\n      } = response.data;\n      const newList = {\n        id: tasklistID,\n        listName: listName,\n        Tasks: Tasks\n      };\n      setTasklist([...tasklist, newList]);\n      setDynamisation(false);\n      setListName(\"\");\n    }).catch(err => {});\n  };\n\n  const deletelist = id => {\n    const data = {\n      listid: id\n    };\n    axios.delete(api + '/tasklist', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      data\n    }).then(response => {}).catch((response, err) => {});\n    const remainlist = tasklist.filter(list => id !== list.id);\n    setTasklist(remainlist);\n  };\n\n  const enterArea = /*#__PURE__*/_jsxDEV(EnterArea, {\n    handleSubmit: e => handleSubmit(e, \"/tasklist\", {\n      listName: listName\n    }),\n    wrap: \"enter-section-name-wrap\",\n    handleChange: handleChange,\n    text: \"Add List\",\n    placeholder: \"Enter list title...\",\n    cancel: cancelAdd\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n\n  const addAnotherListBtn = /*#__PURE__*/_jsxDEV(AddButton, {\n    addElement: addTaskList,\n    text: \"Add another list\",\n    ClassName: \"add-list\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n\n  const sectionList = tasklist.map(section => /*#__PURE__*/_jsxDEV(TaskSection, {\n    id: section.id,\n    name: cuttingStr(section.listName),\n    deletelist: deletelist,\n    task: section.Tasks\n  }, section.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-canvas\",\n      children: [sectionList, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-1\",\n        children: dynamisation ? enterArea : addAnotherListBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Board, \"3t/Hw9XidHMiBYgZRn0/OWhbDKU=\");\n\n_c = Board;\n\nfunction cuttingStr(str) {\n  const bytes = encodeURI(str).replace(/%../g, \"*\").length;\n  return bytes >= 24 ? str.substr(0, 23) + \"...\" : str;\n}\n\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-v0.1/client/src/pages/board.js"],"names":["React","useEffect","useState","TaskSection","EnterArea","AddButton","axios","defaults","withCredentials","api","process","env","REACT_APP_API","Board","props","tasklist","setTasklist","listName","setListName","dynamisation","setDynamisation","get","then","response","data","catch","err","addTaskList","cancelAdd","e","preventDefault","handleChange","target","value","handleSubmit","path","bodyData","keys","Object","length","post","headers","mode","tasklistID","Tasks","newList","id","deletelist","listid","delete","remainlist","filter","list","enterArea","addAnotherListBtn","sectionList","map","section","cuttingStr","str","bytes","encodeURI","replace","substr"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TaskSection from \"../components/task-section\";\nimport EnterArea from \"../components/enterArea\";\nimport AddButton from \"../components/addButton\";\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/board.css\";\naxios.defaults.withCredentials = true;\nconst api = process.env.REACT_APP_API;\n\nfunction Board(props) {\n    const [tasklist, setTasklist] = useState(props.tasklist);\n    const [listName, setListName] = useState(\"\");\n    const [dynamisation, setDynamisation] = useState(false);\n\n    useEffect(() => {\n        axios.get(api + \"/board\")\n        .then(response => {\n            const data = response.data\n            setTasklist(data);\n        })\n        .catch(err => {\n            \n        })\n    }, [])\n\n    const addTaskList = () => {\n        setDynamisation(true);\n    }\n\n    const cancelAdd = (e) => {\n        e.preventDefault()\n        setDynamisation(false)\n    }\n\n    const handleChange = (e) => {\n        setListName(e.target.value);\n    }\n\n    const handleSubmit = (e, path, bodyData) => {\n        e.preventDefault();\n        // if (listName.length === 0) return ;\n        const keys = Object.keys(bodyData);\n        if (bodyData[keys[0]].length === 0) return ;\n\n        const data = {\n            listName: listName,\n        }\n        axios.post(api + path, {\n            headers: {'Content-Type': 'application/json'},\n            mode: 'cors',\n            bodyData\n        })\n        .then(response => {\n            const  { tasklistID, listName, Tasks } = response.data; \n            const newList = { id: tasklistID, listName: listName, Tasks: Tasks };\n            setTasklist([...tasklist, newList])\n            setDynamisation(false)\n            setListName(\"\")\n        })\n        .catch(err => {\n            \n        })\n    }\n\n    const deletelist = (id) => {\n        const data = {\n            listid: id,\n        }\n        axios.delete(api + '/tasklist', {\n            headers: {'Content-Type': 'application/json'},\n            mode: 'cors',\n            data\n        })\n        .then(response => {\n            \n        })\n        .catch((response, err) => {\n            \n        })\n\n        const remainlist = tasklist.filter(list => id !== list.id);\n        setTasklist(remainlist)\n    }\n\n    const enterArea = \n        <EnterArea \n            handleSubmit={(e) => handleSubmit(e, \"/tasklist\", { listName: listName })}\n            wrap=\"enter-section-name-wrap\"\n            handleChange={handleChange}\n            text=\"Add List\"\n            placeholder=\"Enter list title...\"\n            cancel={cancelAdd}\n        />\n\n    const addAnotherListBtn = \n        <AddButton \n            addElement={addTaskList}\n            text=\"Add another list\"\n            ClassName=\"add-list\"    \n        />\n\n    const sectionList = tasklist\n    .map(section => (\n        <TaskSection\n            id={section.id}\n            key={section.id}\n            name={cuttingStr(section.listName)}\n            deletelist={deletelist}\n            task={section.Tasks}\n        />\n    ))\n\n    return (\n            <div className=\"board-wrapper\">\n                <div className=\"board-canvas\">\n                    {sectionList}\n                    <div className=\"mx-1\">\n                        {dynamisation ? enterArea : addAnotherListBtn}\n                    </div>\n                </div>\n            </div>\n        )\n}\n\nfunction cuttingStr(str) {\n    const bytes = encodeURI(str).replace(/%../g, \"*\").length;\n    return bytes >= 24 ? str.substr(0, 23) + \"...\" : str;\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}