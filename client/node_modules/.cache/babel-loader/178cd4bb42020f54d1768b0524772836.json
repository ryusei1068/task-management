{"ast":null,"code":"import _slicedToArray from\"/Users/nohararyusei/dev/task-v0.1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useLayoutEffect}from\"react\";import{VscClose}from\"react-icons/vsc\";import TextareaAutosize from'react-textarea-autosize';import\"../styles/modal.css\";import API from\"./api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Modal(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),description=_useState2[0],setDescription=_useState2[1];var _useState3=useState(props.taskid),_useState4=_slicedToArray(_useState3,1),taskid=_useState4[0];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),editable=_useState6[0],setEditable=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),detailID=_useState8[0],setDetailID=_useState8[1];useLayoutEffect(function(){API.get(\"detail\",{params:{id:taskid}}).then(function(response){var status=response.status;if(status===200){var _response$data=response.data,id=_response$data.id,_description=_response$data.description;setDescription(_description);setDetailID(id);}else{setEditable(true);}}).catch(function(err){// what should I do\nwindow.location.reload();});},[taskid]);var saveDescripion=function saveDescripion(path,data){setEditable(false);API.put(path,{data:data}).then(function(response){var _response$data2=response.data,id=_response$data2.id,description=_response$data2.description;setDetailID(id);setDescription(description);}).catch(function(err){// what should i do\nwindow.location.reload();});};var textArea=/*#__PURE__*/_jsx(TextareaAutosize,{className:\"text-area-for-descripton\",onChange:function onChange(e){return setDescription(e.target.value);},autoFocus:true,placeholder:\"description...\"});var detail=/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",onClick:function onClick(){return setEditable(true);},children:description});return/*#__PURE__*/_jsx(\"div\",{id:\"overlay\",children:/*#__PURE__*/_jsx(\"div\",{id:\"content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title\",children:props.taskName}),/*#__PURE__*/_jsx(\"div\",{className:\"close\",onClick:function onClick(){return props.setOpen(false);},children:/*#__PURE__*/_jsx(VscClose,{})})]}),/*#__PURE__*/_jsx(\"h5\",{className:\"description\",children:\"description\"}),/*#__PURE__*/_jsx(\"div\",{children:editable?textArea:detail}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:function onClick(){return saveDescripion(\"detail\",{description:description,taskid:taskid,id:detailID});},children:\"Save\"})]})})})});}export default Modal;","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-v0.1/client/src/components/modal.js"],"names":["React","useState","useLayoutEffect","VscClose","TextareaAutosize","API","Modal","props","description","setDescription","taskid","editable","setEditable","detailID","setDetailID","get","params","id","then","response","status","data","catch","err","window","location","reload","saveDescripion","path","put","textArea","e","target","value","detail","taskName","setOpen"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport { VscClose } from \"react-icons/vsc\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport \"../styles/modal.css\";\nimport API from \"./api\";\n\nfunction Modal(props) {\n    const [description, setDescription] = useState(\"\");\n    const [taskid] = useState(props.taskid);\n    const [editable, setEditable] = useState(false);\n    const [detailID, setDetailID] = useState();\n\n    useLayoutEffect(() => {\n        API.get(\"detail\", {\n            params: {\n                id: taskid\n            },\n        })\n        .then(response => {\n            const { status } = response;\n            if (status === 200) {\n                const { id, description } = response.data;\n                setDescription(description);\n                setDetailID(id);\n            }\n            else {\n                setEditable(true);\n            }\n        })\n        .catch(err => {\n            // what should I do\n            window.location.reload();\n        })\n    }, [taskid])\n\n    const saveDescripion = (path, data) => {\n        setEditable(false);\n        API.put(path, {\n            data\n        })\n        .then(response => {\n            const { id, description } = response.data;\n            setDetailID(id);\n            setDescription(description);\n        })\n        .catch(err => {\n            // what should i do\n            window.location.reload();\n        })\n    }   \n\n    const textArea =\n        <TextareaAutosize \n            className=\"text-area-for-descripton\"\n            onChange={(e) => setDescription(e.target.value)}\n            autoFocus={true}\n            placeholder={\"description...\"}\n        />\n    \n    const detail =\n            <p className=\"card-text\" onClick={() => setEditable(true)}>{description}</p>\n    \n    return (\n        <div id=\"overlay\">\n            <div id=\"content\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"d-flex justify-content-between\">\n                            <h4 className=\"card-title\">{props.taskName}</h4>\n                            <div className=\"close\" onClick={() => props.setOpen(false)}>\n                                <VscClose />\n                            </div>  \n                        </div>\n                        <h5 className=\"description\">description</h5>\n                        <div >\n                            {editable ? textArea : detail}\n                        </div>\n                        <button className=\"btn btn-secondary\" onClick={() => saveDescripion(\"detail\", {description : description, taskid: taskid, id: detailID})}>Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}