{"ast":null,"code":"import _toConsumableArray from\"/Users/nohararyusei/dev/task-v0.1/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/nohararyusei/dev/task-v0.1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Tasklist from\"./tasklist\";import EnterArea from\"./enterArea\";import AddButton from\"./addButton\";import'bootstrap/dist/css/bootstrap.min.css';import\"../styles/board.css\";import API from\"./api\";import cuttingStr from\"./shaping\";import Navbar from\"./navbar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Board(props){var _useState=useState(props.tasklist),_useState2=_slicedToArray(_useState,2),tasklist=_useState2[0],setTasklist=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),listName=_useState4[0],setListName=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),dynamisation=_useState6[0],setDynamisation=_useState6[1];useEffect(function(){API.get(\"board\").then(function(response){var data=response.data;setTasklist(data);}).catch(function(err){// what should I do\n});},[]);var _handleSubmit=function handleSubmit(e,path,data){e.preventDefault();if(listName.length===0)return;API.post(path,{data:data}).then(function(response){var _response$data=response.data,tasklistID=_response$data.tasklistID,listName=_response$data.listName,Tasks=_response$data.Tasks;var newList={id:tasklistID,listName:listName,Tasks:Tasks};setTasklist([].concat(_toConsumableArray(tasklist),[newList]));setDynamisation(false);setListName(\"\");}).catch(function(err){// what should I do\nwindow.location.reload();});};var deletelist=function deletelist(path,data,id){API.delete(path,{data:data}).then(function(response){// what should I do\n}).catch(function(response,err){// what should I do\nwindow.location.reload();});var remainlist=tasklist.filter(function(list){return id!==list.id;});setTasklist(remainlist);};var enterArea=/*#__PURE__*/_jsx(EnterArea,{handleSubmit:function handleSubmit(e){return _handleSubmit(e,\"tasklist\",{listName:listName});},wrap:\"enter-section-name-wrap\",handleChange:function handleChange(e){return setListName(e.target.value);},text:\"Add List\",placeholder:\"Enter list title...\",cancel:function cancel(e){e.preventDefault();setDynamisation(false);}});var addAnotherListBtn=/*#__PURE__*/_jsx(AddButton,{addElement:function addElement(){return setDynamisation(true);},text:\"Add another list\",ClassName:\"add-list\"});var sectionList=tasklist.map(function(section){return/*#__PURE__*/_jsx(Tasklist,{id:section.id,name:cuttingStr(section.listName),deletelist:deletelist,task:section.Tasks},section.id);});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{authenticate:props.authenticate}),/*#__PURE__*/_jsx(\"div\",{className:\"board-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"board-canvas\",children:[sectionList,/*#__PURE__*/_jsx(\"div\",{className:\"mx-1\",children:dynamisation?enterArea:addAnotherListBtn})]})})]});}export default Board;","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-v0.1/client/src/components/board.js"],"names":["React","useEffect","useState","Tasklist","EnterArea","AddButton","API","cuttingStr","Navbar","Board","props","tasklist","setTasklist","listName","setListName","dynamisation","setDynamisation","get","then","response","data","catch","err","handleSubmit","e","path","preventDefault","length","post","tasklistID","Tasks","newList","id","window","location","reload","deletelist","delete","remainlist","filter","list","enterArea","target","value","addAnotherListBtn","sectionList","map","section","authenticate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Tasklist from \"./tasklist\";\nimport EnterArea from \"./enterArea\";\nimport AddButton from \"./addButton\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/board.css\";\nimport API from \"./api\";\nimport cuttingStr from \"./shaping\";\nimport Navbar from \"./navbar\";\n\nfunction Board(props) {\n    const [tasklist, setTasklist] = useState(props.tasklist);\n    const [listName, setListName] = useState(\"\");\n    const [dynamisation, setDynamisation] = useState(false);\n\n    useEffect(() => {\n        API.get(\"board\")\n        .then(response => {\n            const data = response.data\n            setTasklist(data);\n        })\n        .catch(err => {\n            // what should I do\n        })\n    }, [])\n\n    const handleSubmit = (e, path, data) => {\n        e.preventDefault();\n        if (listName.length === 0) return ;\n        API.post(path, {\n            data\n        })\n        .then(response => {\n            const  { tasklistID, listName, Tasks } = response.data; \n            const newList = { id: tasklistID, listName: listName, Tasks: Tasks };\n            setTasklist([...tasklist, newList])\n            setDynamisation(false)\n            setListName(\"\")\n        })\n        .catch(err => {\n            // what should I do\n            window.location.reload();\n        })\n    }\n\n    const deletelist = (path, data, id) => {\n\n        API.delete(path, {\n            data\n        })\n        .then(response => {\n            // what should I do\n        })\n        .catch((response, err) => {\n            // what should I do\n            window.location.reload();\n        })\n\n        const remainlist = tasklist.filter(list => id !== list.id);\n        setTasklist(remainlist)\n    }\n\n    const enterArea = \n        <EnterArea \n            handleSubmit={(e) => handleSubmit(e, \"tasklist\", { listName: listName })}\n            wrap=\"enter-section-name-wrap\"\n            handleChange={(e) => setListName(e.target.value)}\n            text=\"Add List\"\n            placeholder=\"Enter list title...\"\n            cancel={(e) => {\n                e.preventDefault()\n                setDynamisation(false)\n            }}\n        />\n\n    const addAnotherListBtn = \n        <AddButton \n            addElement={() => setDynamisation(true)}\n            text=\"Add another list\"\n            ClassName=\"add-list\"    \n        />\n\n    const sectionList = tasklist\n    .map(section => (\n        <Tasklist\n            id={section.id}\n            key={section.id}\n            name={cuttingStr(section.listName)}\n            deletelist={deletelist}\n            task={section.Tasks}\n        />\n    ))\n\n    return (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Navbar authenticate={props.authenticate}/>\n            <div className=\"board-wrapper\">\n                <div className=\"board-canvas\">\n                    {sectionList}\n                    <div className=\"mx-1\">\n                        {dynamisation ? enterArea : addAnotherListBtn}\n                    </div>\n                </div>\n            </div>\n\t\t\t\t\t</>\n        )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}