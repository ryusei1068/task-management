{"ast":null,"code":"import _slicedToArray from\"/Users/nohararyusei/dev/task-v0.1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import TextareaAutosize from'react-textarea-autosize';import{BsTrash}from'react-icons/bs';import{AiOutlineEdit}from\"react-icons/ai\";import API from\"./api\";import cuttingStr from\"./shaping\";import Modal from\"./modal\";import\"../styles/taskCard.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TaskCard(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editable=_useState2[0],setEditable=_useState2[1];var _useState3=useState(props.name),_useState4=_slicedToArray(_useState3,2),taskName=_useState4[0],setTaskName=_useState4[1];var _useState5=useState(props.id),_useState6=_slicedToArray(_useState5,1),taskID=_useState6[0];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isOpen=_useState8[0],setOpen=_useState8[1];var keyPress=function keyPress(e,path,data){if(e.which===13&&taskName.length){setEditable(false);API.put(path,{data:data}).then(function(response){setTaskName(response.data.TaskName);}).catch(function(err){// what should I do \nwindow.location.reload();});}};var task=/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"p\",{className:\"task-name\",onClick:function onClick(){return setEditable(true);},children:cuttingStr(taskName)})});var textArea=/*#__PURE__*/_jsx(TextareaAutosize,{className:\"task-name\",onKeyPress:function onKeyPress(e){return keyPress(e,\"task\",{id:taskID,TaskName:taskName});},onChange:function onChange(e){return setTaskName(e.target.value);},autoFocus:true});return/*#__PURE__*/_jsxs(\"div\",{className:\"toast fade show\",role:\"alert\",\"aria-live\":\"assertive\",\"aria-atomic\":\"true\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toast-header d-flex align-items-center\",children:[editable?textArea:task,/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-column\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"trash-box-icon\",onClick:function onClick(){return props.deleteTask(\"task\",{id:props.id},props.id);},children:/*#__PURE__*/_jsx(BsTrash,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"edit-icon\",onClick:function onClick(){return setOpen(true);},children:/*#__PURE__*/_jsx(AiOutlineEdit,{})})]})]}),isOpen?/*#__PURE__*/_jsx(Modal,{setOpen:setOpen,taskName:taskName,taskid:taskID}):null]});}export default TaskCard;","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-v0.1/client/src/components/taskCard.js"],"names":["React","useState","TextareaAutosize","BsTrash","AiOutlineEdit","API","cuttingStr","Modal","TaskCard","props","editable","setEditable","name","taskName","setTaskName","id","taskID","isOpen","setOpen","keyPress","e","path","data","which","length","put","then","response","TaskName","catch","err","window","location","reload","task","textArea","target","value","deleteTask"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { BsTrash } from 'react-icons/bs';\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport API from \"./api\";\nimport cuttingStr from \"./shaping\";\nimport Modal from \"./modal\";\nimport \"../styles/taskCard.css\";\n\n\nfunction TaskCard(props) {\n    const [editable, setEditable] = useState(false);\n    const [taskName, setTaskName] = useState(props.name);\n    const [taskID] = useState(props.id);\n    const [isOpen, setOpen] = useState(false);\n\n    const keyPress = (e, path, data) => {\n        if (e.which === 13 && taskName.length) {\n            setEditable(false)\n            API.put(path, {\n                data\n            })\n            .then(response => {\n                setTaskName(response.data.TaskName);\n            })\n            .catch(err => {\n                // what should I do \n                window.location.reload();\n            })\n        }\n    }\n\n    const task =  \n            <>\n                <p className=\"task-name\" onClick={() => setEditable(true)}>{cuttingStr(taskName)}</p>\n            </>\n\n    const textArea =\n                <TextareaAutosize \n                    className=\"task-name\"\n                    onKeyPress={(e) => keyPress(e, \"task\", {id: taskID, TaskName: taskName})} \n                    onChange={(e) => setTaskName(e.target.value)}\n                    autoFocus={true}\n                />\n        \n    return (\n            <div className=\"toast fade show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n                <div className=\"toast-header d-flex align-items-center\">\n                    {editable ? textArea : task}\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"trash-box-icon\" \n                            onClick={() => props.deleteTask(\"task\", { id: props.id }, props.id)} >\n                            <BsTrash />\n                        </div>\n                        <div className=\"edit-icon\" onClick={() => setOpen(true)}>\n                            <AiOutlineEdit />\n                        </div>\n                    </div>\n                </div>\n                {isOpen ? <Modal setOpen={setOpen} taskName={taskName} taskid={taskID}/> : null}\n            </div>\n        )\n}\n\n\nexport default TaskCard;\n"]},"metadata":{},"sourceType":"module"}