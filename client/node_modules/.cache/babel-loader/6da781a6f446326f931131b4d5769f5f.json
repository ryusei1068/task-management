{"ast":null,"code":"var _jsxFileName = \"/Users/nohararyusei/dev/task-v0.1/client/src/components/task-section.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Task from \"./task\";\nimport EnterArea from \"./enterArea\";\nimport AddButton from \"./addButton\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { VscClose } from \"react-icons/vsc\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = process.env.REACT_APP_API;\n\nfunction TaskSection(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.task);\n  const [inputMode, setEnable] = useState(false);\n  const [taskName, setTaskName] = useState(\"\");\n  const [enterMode, setEnterMode] = useState(false);\n  const [tasklistID] = useState(props.id);\n  const [listName, setListName] = useState(props.name);\n\n  const keyPress = e => {\n    if (e.which === 13) {\n      setEnable(false);\n      const data = {\n        listid: tasklistID,\n        listName: listName\n      };\n      axios.put(api + '/tasklist', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        mode: 'cors',\n        data\n      }).then(response => {\n        setListName(cuttingStr(response.data.listName));\n      }).catch(() => {\n        window.location.reload();\n      });\n    }\n  };\n\n  const cancelAdd = e => {\n    e.preventDefault();\n    setEnterMode(false);\n  };\n\n  const addCard = () => {\n    setEnterMode(true);\n  };\n\n  const changeTaskName = e => {\n    setTaskName(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (taskName.length === 0) return;\n    const data = {\n      taskName: taskName,\n      tasklistID: tasklistID\n    };\n    axios.post(api + \"/task\", {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      data\n    }).then(responce => {\n      const data = responce.data;\n      const newTask = {\n        id: data.taskID,\n        TaskName: cuttingStr(data.taskName)\n      };\n      setTasks([...tasks, newTask]);\n      setEnterMode(false);\n      setTaskName(\"\");\n    }).catch(err => {\n      window.location.reload();\n    });\n  };\n\n  const deleteTask = id => {\n    const data = {\n      id: id\n    };\n    axios.delete(api + '/task', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      data\n    }).then(res => {}).catch(err => {\n      window.location.reload();\n    });\n    const remainTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainTasks);\n  };\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n    id: task.id,\n    name: task.TaskName,\n    deleteTask: deleteTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 13\n  }, this));\n\n  const enterTaskName = /*#__PURE__*/_jsxDEV(EnterArea, {\n    handleSubmit: handleSubmit,\n    wrap: \"enter-task-name m-3\",\n    handleChange: changeTaskName,\n    text: \"Add Task\",\n    placeholder: \"Enter task name...\",\n    cancel: cancelAdd\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n\n  const addTaskBtn = /*#__PURE__*/_jsxDEV(AddButton, {\n    addElement: addCard,\n    text: \"Add a Card\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n\n  const taskListName = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"listName\",\n      onClick: () => setEnable(true),\n      children: listName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trash-box-icon\",\n      onClick: () => props.deletelist('/tasklist', {\n        listid: props.id\n      }),\n      children: /*#__PURE__*/_jsxDEV(VscClose, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n\n  const textArea = /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n    className: \"section-title w-100\",\n    onKeyPress: e => keyPress(e),\n    onChange: e => setListName(e.target.value),\n    autoFocus: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 17\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vh-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-2 list-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-3 sectionName-wrap\",\n          children: inputMode ? textArea : taskListName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-cards\",\n        children: taskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), !enterMode ? addTaskBtn : enterTaskName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TaskSection, \"06jDOhv4QsMKmN0Q+Fwo5u4SMjo=\");\n\n_c = TaskSection;\n\nfunction cuttingStr(str) {\n  const bytes = encodeURI(str).replace(/%../g, \"*\").length;\n  return bytes >= 24 ? str.substr(0, 23) + \"...\" : str;\n}\n\nexport default TaskSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskSection\");","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-v0.1/client/src/components/task-section.js"],"names":["React","useState","Task","EnterArea","AddButton","TextareaAutosize","VscClose","axios","api","process","env","REACT_APP_API","TaskSection","props","tasks","setTasks","task","inputMode","setEnable","taskName","setTaskName","enterMode","setEnterMode","tasklistID","id","listName","setListName","name","keyPress","e","which","data","listid","put","headers","mode","then","response","cuttingStr","catch","window","location","reload","cancelAdd","preventDefault","addCard","changeTaskName","target","value","handleSubmit","length","post","responce","newTask","taskID","TaskName","err","deleteTask","delete","res","remainTasks","filter","taskList","map","enterTaskName","addTaskBtn","taskListName","deletelist","textArea","str","bytes","encodeURI","replace","substr"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Task from \"./task\";\nimport EnterArea from \"./enterArea\";\nimport AddButton from \"./addButton\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { VscClose } from \"react-icons/vsc\";\nimport axios from \"axios\";\n\nconst api = process.env.REACT_APP_API;\n\nfunction TaskSection(props) {\n    const [tasks, setTasks] = useState(props.task);\n    const [inputMode, setEnable] = useState(false);\n    const [taskName, setTaskName] = useState(\"\");\n    const [enterMode, setEnterMode] = useState(false);\n    const [tasklistID] = useState(props.id);\n    const [listName, setListName] = useState(props.name);\n    \n    const keyPress = (e) => {\n        if (e.which === 13) {\n            setEnable(false)\n\n            const data = {\n                listid: tasklistID,\n                listName: listName\n            }\n            axios.put(api + '/tasklist', {\n                headers: {'Content-Type': 'application/json'},\n                mode: 'cors',\n                data\n            })\n            .then((response) => {\n                setListName(cuttingStr(response.data.listName));\n            })\n            .catch(() => {\n                window.location.reload();\n            })\n        }\n    }\n\n    const cancelAdd = (e) => {\n        e.preventDefault();\n        setEnterMode(false)\n    }\n\n    const addCard = () => {\n        setEnterMode(true);\n    }\n\n    const changeTaskName = (e) => {\n        setTaskName(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (taskName.length === 0) return ;\n        const data = {\n            taskName: taskName,\n            tasklistID: tasklistID\n        }\n        axios.post(api + \"/task\", {\n            headers: {'Content-Type': 'application/json'},\n            mode: 'cors',\n            data\n        })\n        .then(responce => {\n            const data = responce.data;\n            const newTask = { id: data.taskID, TaskName: cuttingStr(data.taskName)};\n            setTasks([...tasks, newTask])\n            setEnterMode(false)\n            setTaskName(\"\");\n        })\n        .catch(err => {\n            window.location.reload();\n        })\n    }\n\n    const deleteTask = (id) => {\n        const data = {\n            id: id,\n        }\n        axios.delete(api + '/task', {\n            headers: {'Content-Type': 'application/json'},\n            mode: 'cors',\n            data\n        })\n        .then(res => {\n\n        })\n        .catch(err => {\n            window.location.reload();\n        })\n        const remainTasks = tasks.filter(task => id !== task.id);\n        setTasks(remainTasks)\n    }\n\n    const taskList = tasks\n        .map(task => (\n            <Task\n                id={task.id}\n                key={task.id}\n                name={task.TaskName}\n                deleteTask={deleteTask}\n            />\n        ))    \n\n    const enterTaskName = \n        <EnterArea \n            handleSubmit={handleSubmit}\n            wrap=\"enter-task-name m-3\"\n            handleChange={changeTaskName}\n            text=\"Add Task\"\n            placeholder=\"Enter task name...\"\n            cancel={cancelAdd}\n        />\n\n    const addTaskBtn = \n        <AddButton \n            addElement={addCard}\n            text=\"Add a Card\"\n        />\n    \n    const taskListName =  \n            <>\n                <h5 className=\"listName\" onClick={() => setEnable(true)}>{listName}</h5>\n                <div className=\"trash-box-icon\" \n                    onClick={() => props.deletelist( '/tasklist', { listid: props.id })}\n                >\n                    <VscClose/>\n                </div>\n            </>\n\n    const textArea =\n                <TextareaAutosize \n                    className=\"section-title w-100\" \n                    onKeyPress={(e) => keyPress(e)} \n                    onChange={(e) => setListName(e.target.value)}\n                    autoFocus={true}\n                />\n\n    return  (\n            <div className=\"vh-100\">\n                <div className=\"mx-2 list-wrapper\">\n                    <div className=\"mx-3\">\n                        <div className=\"pt-3 sectionName-wrap\">\n                            {inputMode ? textArea : taskListName}\n                        </div>\n                    </div>\n                    <div className=\"task-cards\">\n                        {taskList}\n                    </div>\n                        {!enterMode ? addTaskBtn : enterTaskName}\n                </div>\n            </div>\n        )\n}\n\nfunction cuttingStr(str) {\n    const bytes = encodeURI(str).replace(/%../g, \"*\").length;\n    return bytes >= 24 ? str.substr(0, 23) + \"...\" : str;\n}\n\nexport default TaskSection;\n"]},"metadata":{},"sourceType":"module"}