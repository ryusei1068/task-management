{"ast":null,"code":"var _jsxFileName = \"/Users/nohararyusei/dev/task-v0.1/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Board from \"./components/board\";\nimport NotFoundPage from \"./components/notfound\";\nimport TopPage from \"./components/toppage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport API from \"./components/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [loggedIn, setAuthenticated] = useState(false);\n  useEffect(() => {\n    API.get(\"/\").then(res => {\n      const {\n        message\n      } = res.data;\n      console.log(message);\n      if (message === \"authenticated\") setAuthenticated(true);\n    }).catch(err => {\n      window.location.reload();\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/boards\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Board, {\n            tasklist: props.tasklist,\n            authenticate: setAuthenticated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 107\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/boards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(TopPage, {\n            loggedIn: loggedIn,\n            authenticate: setAuthenticated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"y91KBTjff15tWkbmG3nrRtwU3lE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-v0.1/client/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Redirect","Board","NotFoundPage","TopPage","API","App","props","loggedIn","setAuthenticated","get","then","res","message","data","console","log","catch","err","window","location","reload","tasklist"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,QAJJ,QAKO,kBALP;AAMA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,sCAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,gBAAX,IAA+Bd,QAAQ,CAAC,KAAD,CAA7C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,GAAG,CAACK,GAAJ,CAAQ,GAAR,EACCC,IADD,CACMC,GAAG,IAAI;AACT,YAAM;AAAEC,QAAAA;AAAF,UAAcD,GAAG,CAACE,IAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,UAAIA,OAAO,KAAK,eAAhB,EAAiCJ,gBAAgB,CAAC,IAAD,CAAhB;AACpC,KALD,EAMCQ,KAND,CAMOC,GAAG,IAAI;AACVC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KARD;AASH,GAVQ,CAAT;AAaA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,SAAlB;AAAA,oBACKb,QAAQ,gBAAG,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAED,KAAK,CAACe,QAAvB;AAAiC,YAAA,YAAY,EAAEb;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAyE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADtF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,oBACKD,QAAQ,gBAAG,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAA+B,QAAC,OAAD;AAAS,YAAA,QAAQ,EAAEA,QAAnB;AAA6B,YAAA,YAAY,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA;AAD5C;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,KAAD;AAAA,iCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAiBH;;GAjCQH,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport Board from \"./components/board\";\nimport NotFoundPage from \"./components/notfound\";\nimport TopPage from \"./components/toppage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport API from \"./components/api\";\n\n\nfunction App(props) {\n    const [loggedIn, setAuthenticated] = useState(false)\n\n    useEffect(() => {\n        API.get(\"/\")\n        .then(res => {\n            const { message } = res.data;\n            console.log(message);\n            if (message === \"authenticated\") setAuthenticated(true);\n        })\n        .catch(err => {\n            window.location.reload();\n        })\n    })\n\n\n    return (\n        <>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/boards\">\n                        {loggedIn ? <Board tasklist={props.tasklist} authenticate={setAuthenticated} /> : <Redirect to=\"/\" />}\n                    </Route>\n                    <Route exact path=\"/\">\n                        {loggedIn ? <Redirect to=\"/boards\" /> : <TopPage loggedIn={loggedIn} authenticate={setAuthenticated} />}\n                    </Route>\n                    <Route>\n                        <NotFoundPage />\n                    </Route>\n                </Switch>\n            </Router>\n        </>\n        )\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}