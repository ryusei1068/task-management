{"ast":null,"code":"var _jsxFileName = \"/Users/nohararyusei/dev/task-v0.1/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Board from \"./pages/board\";\nimport Login from \"./pages/login\";\nimport NotFoundPage from \"./pages/notfound\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = process.env.REACT_APP_API;\naxios.defaults.withCredentials = true;\n\nfunction App(props) {\n  _s();\n\n  const [cookies, setCookie] = useCookies();\n  const [loggedIn, setAuthenticated] = useState(false);\n  useEffect(() => {\n    axios.get(api).then(res => {\n      const {\n        data\n      } = res;\n      axios.defaults.headers.post['X-CSRF-Token'] = data.csrfToken;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/board\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Board, {\n            tasklist: props.tasklist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/board\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            loggedIn: loggedIn,\n            authenticate: setAuthenticated,\n            setCookie: setCookie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n} // function isAuthenticated() {\n//     try {\n//         if (document.cookie.split(';').some((item) => item.trim().startsWith('indiv'))) {\n//             return true;\n//         }  \n//         else {\n//             return false;\n//         }\n//     } \n//     catch {\n//         return false;\n//     }\n// }\n\n\n_s(App, \"pDy/l5KdlYjEC/dZCG8tgpFJo7k=\", false, function () {\n  return [useCookies];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-v0.1/client/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Switch","Route","Redirect","Board","Login","NotFoundPage","useCookies","axios","api","process","env","REACT_APP_API","defaults","withCredentials","App","props","cookies","setCookie","loggedIn","setAuthenticated","get","then","res","data","headers","post","csrfToken","tasklist"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,QAJJ,QAKO,kBALP;AAMA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AACAJ,KAAK,CAACK,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBX,UAAU,EAAvC;AACA,QAAM,CAACY,QAAD,EAAWC,gBAAX,IAA+BtB,QAAQ,CAAC,KAAD,CAA7C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,KAAK,CAACa,GAAN,CAAUZ,GAAV,EACCa,IADD,CACMC,GAAG,IAAI;AACT,YAAM;AAAEC,QAAAA;AAAF,UAAWD,GAAjB;AACAf,MAAAA,KAAK,CAACK,QAAN,CAAeY,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8CF,IAAI,CAACG,SAAnD;AACH,KAJD;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAAA,oBACKR,QAAQ,gBAAG,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAEH,KAAK,CAACY;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAAH,gBACT,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,oBACKT,QAAQ,gBAAG,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAH,gBACT,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAEA,QAAjB;AAA2B,YAAA,YAAY,EAAEC,gBAAzC;AAA2D,YAAA,SAAS,EAAEF;AAAtE;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI,QAAC,KAAD;AAAA,iCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAmBH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA7CSH,G;UACwBR,U;;;KADxBQ,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport Board from \"./pages/board\";\nimport Login from \"./pages/login\";\nimport NotFoundPage from \"./pages/notfound\";\nimport { useCookies } from \"react-cookie\"; \nimport axios from \"axios\";\nconst api = process.env.REACT_APP_API;\naxios.defaults.withCredentials = true;\n\nfunction App(props) {\n    const [cookies, setCookie] = useCookies();\n    const [loggedIn, setAuthenticated] = useState(false);\n    \n    useEffect(() => {\n        axios.get(api)\n        .then(res => {\n            const { data } = res;\n            axios.defaults.headers.post['X-CSRF-Token'] = data.csrfToken;\n        })\n    }, [])\n\n    return (\n        <>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/board\">\n                        {loggedIn ? <Board tasklist={props.tasklist}/> :\n                        <Redirect to=\"/\" />}\n                    </Route>\n                    <Route exact path=\"/\">\n                        {loggedIn ? <Redirect to=\"/board\" /> : \n                        <Login loggedIn={loggedIn} authenticate={setAuthenticated} setCookie={setCookie}/>}\n                    </Route>\n                    <Route>\n                        <NotFoundPage />\n                    </Route>\n                </Switch>\n            </Router>\n        </>\n        )\n}\n\n// function isAuthenticated() {\n//     try {\n//         if (document.cookie.split(';').some((item) => item.trim().startsWith('indiv'))) {\n//             return true;\n//         }  \n//         else {\n//             return false;\n//         }\n//     } \n//     catch {\n//         return false;\n//     }\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}