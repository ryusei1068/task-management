{"ast":null,"code":"var _jsxFileName = \"/Users/nohararyusei/dev/task-management-v1-public/client/src/components/board.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/board.css\";\nimport React, { useEffect, useState } from \"react\";\nimport AddButton from \"./addButton\";\nimport API from \"./api\";\nimport EnterArea from \"./enterArea\";\nimport Navbar from \"./navbar\";\nimport cuttingStr from \"./shaping\";\nimport Tasklist from \"./tasklist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const [tasklist, setTasklist] = useState(props.tasklist);\n  const [listName, setListName] = useState(\"\");\n  const [dynamisation, setDynamisation] = useState(false);\n  useEffect(() => {\n    API.get(\"board\").then(response => {\n      const data = response.data;\n      setTasklist(data);\n    }).catch(() => {\n      window.location.reload();\n    });\n  }, tasklist);\n\n  const handleSubmit = (e, path, data) => {\n    e.preventDefault();\n    if (listName.length === 0) return;\n    API.post(path, {\n      data\n    }).then(response => {\n      const {\n        tasklistID,\n        listName,\n        Tasks\n      } = response.data;\n      const newList = {\n        id: tasklistID,\n        listName: listName,\n        Tasks: Tasks\n      };\n      setTasklist([...tasklist, newList]);\n      setDynamisation(false);\n      setListName(\"\");\n    }).catch(() => {\n      window.location.reload();\n    });\n  };\n\n  const deletelist = (path, data, id) => {\n    API.delete(path, {\n      data\n    }).catch(() => {\n      window.location.reload();\n    });\n    const remainlist = tasklist.filter(list => id !== list.id);\n    setTasklist(remainlist);\n  };\n\n  const enterArea = /*#__PURE__*/_jsxDEV(EnterArea, {\n    handleSubmit: e => handleSubmit(e, \"tasklist\", {\n      listName: listName\n    }),\n    wrap: \"enter-section-name-wrap\",\n    handleChange: e => setListName(e.target.value),\n    text: \"Add List\",\n    placeholder: \"Enter list title...\",\n    cancel: e => {\n      e.preventDefault();\n      setDynamisation(false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 21\n  }, this);\n\n  const addAnotherListBtn = /*#__PURE__*/_jsxDEV(AddButton, {\n    addElement: () => setDynamisation(true),\n    text: \"Add another list\",\n    ClassName: \"add-list\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n\n  const sectionList = tasklist.map(section => /*#__PURE__*/_jsxDEV(Tasklist, {\n    id: section.id,\n    name: cuttingStr(section.listName),\n    deletelist: deletelist,\n    task: section.Tasks\n  }, section.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      authenticate: props.authenticate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-canvas\",\n        children: [sectionList, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-1\",\n          children: dynamisation ? enterArea : addAnotherListBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Board, \"3t/Hw9XidHMiBYgZRn0/OWhbDKU=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/nohararyusei/dev/task-management-v1-public/client/src/components/board.js"],"names":["React","useEffect","useState","AddButton","API","EnterArea","Navbar","cuttingStr","Tasklist","Board","props","tasklist","setTasklist","listName","setListName","dynamisation","setDynamisation","get","then","response","data","catch","window","location","reload","handleSubmit","e","path","preventDefault","length","post","tasklistID","Tasks","newList","id","deletelist","delete","remainlist","filter","list","enterArea","target","value","addAnotherListBtn","sectionList","map","section","authenticate"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/board.css\";\n\nimport React, {useEffect, useState} from \"react\";\n\nimport AddButton from \"./addButton\";\nimport API from \"./api\";\nimport EnterArea from \"./enterArea\";\nimport Navbar from \"./navbar\";\nimport cuttingStr from \"./shaping\";\nimport Tasklist from \"./tasklist\";\n\nfunction Board(props) {\n  const [tasklist, setTasklist] = useState(props.tasklist);\n  const [listName, setListName] = useState(\"\");\n  const [dynamisation, setDynamisation] = useState(false);\n\n  useEffect(() => {API.get(\"board\")\n      .then(response => {\n        const data = response.data\n        setTasklist(data);\n      })\n      .catch(() => \n        { window.location.reload(); })}\n    ,tasklist)\n\n  const handleSubmit =\n      (e, path, data) => {\n        e.preventDefault();\n        if (listName.length === 0)\n          return;\n        API.post(path, {data})\n            .then(response => {\n              const {tasklistID, listName, Tasks} = response.data;\n              const newList = {\n                id : tasklistID,\n                listName : listName,\n                Tasks : Tasks\n              };\n              setTasklist([...tasklist, newList ])\n              setDynamisation(false)\n              setListName(\"\")\n            })\n            .catch(() => { window.location.reload(); })\n      }\n\n  const deletelist =\n      (path, data, id) => {\n        API.delete(path, {data}).catch(() => { window.location.reload(); })\n\n        const remainlist = tasklist.filter(list => id !== list.id);\n        setTasklist(remainlist)\n      }\n\n  const enterArea = < EnterArea\n  handleSubmit = {(e) =>\n                      handleSubmit(e, \"tasklist\", {listName : listName})} wrap =\n      \"enter-section-name-wrap\"\n  handleChange = {(e) => setListName(e.target.value)} text = \"Add List\"\n  placeholder = \"Enter list title...\"\n      cancel={(e) => {\n    e.preventDefault()\n    setDynamisation(false)\n      }}\n    />\n\n  const addAnotherListBtn =\n    <AddButton\n      addElement={() => setDynamisation(true)}\n      text=\"Add another list\"\n      ClassName=\"add-list\"\n    />\n\n  const sectionList = tasklist\n    .map(section => (\n      <Tasklist\n        id={section.id}\n        key={section.id}\n        name={cuttingStr(section.listName)}\n        deletelist={deletelist}\n        task={\n    section.Tasks}\n      />\n    ))\n\n  return (\n    <>\n      <Navbar authenticate={props.authenticate} />\n      <div className=\"board-wrapper\">\n        <div className=\"board-canvas\">\n          {sectionList}\n          <div className=\"mx-1\">\n            {dynamisation ? enterArea : addAnotherListBtn}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}